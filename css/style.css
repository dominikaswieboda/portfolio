/* ==========================================================================
   Normalize.scss settings
   ========================================================================== */
/**
 * Includes legacy browser support IE6/7
 *
 * Set to false if you want to drop support for IE6 and IE7
 */
/* Base
   ========================================================================== */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS and IE text size adjust after device orientation change,
 *    without disabling user zoom.
 * 3. Corrects text resizing oddly in IE 6/7 when body `font-size` is set using
 *  `em` units.
 */
@import url("https://fonts.googleapis.com/css?family=Montserrat:400,600,700,900|Poppins:400,700&display=swap&subset=latin-ext");
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 6/7/8/9 and Firefox 3.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevents modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * Improve readability of focused elements when they are also in an
 * active/hover state.
 */
a:active, a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Addresses styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * 1. Remove border when inside `a` element in IE 8/9/10.
 * 2. Improves image quality when scaled in IE 7.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 * Correct font family set oddly in IE 6, Safari 4/5, and Chrome.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *  Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 * 4. Improves appearance and consistency in all browsers.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *  and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *  `input` and others.
 * 4. Removes inner spacing in IE 7 without affecting normal text inputs.
 *  Known issue: inner spacing remains in IE 6.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 *  Known issue: excess padding remains in IE 6.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  box-sizing: content-box;
  /* 2 */ }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 * 3. Corrects text not wrapping in Firefox 3.
 * 4. Corrects alignment displayed oddly in IE 6/7.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

body {
  font-family: 'Poppins', sans-serif;
  font-weight: 400;
  font-size: 16px;
  background-color: #f5f5f5;
  color: #6a6a6a; }
  @media (max-width: 1280px) {
    body {
      font-size: 14px; } }

* {
  box-sizing: border-box; }

.container {
  width: 1210px;
  max-width: 100%;
  margin: 0 auto;
  padding-right: 15px;
  padding-left: 15px;
  overflow: hidden; }
  @media (max-width: 1280px) {
    .container {
      width: 790px; } }
  @media (max-width: 956px) {
    .container {
      width: 600px; } }
  @media (max-width: 768px) {
    .container {
      width: 420px; } }
  @media (max-width: 480px) {
    .container {
      padding-right: 10px;
      padding-left: 10px;
      width: 100%; } }

img {
  max-width: 100%; }

a {
  text-decoration: none;
  cursor: pointer; }

h1, h2, h3, h4, h5, h6 {
  font-family: 'Montserrat', sans-serif;
  font-weight: 400;
  text-transform: uppercase;
  margin: 0;
  padding: 0; }

p {
  margin: 0;
  padding: 0; }

main {
  margin: 0;
  padding: 0; }

section {
  padding: 110px 0; }

h1 {
  font-weight: 700;
  font-size: 45px;
  line-height: 48px;
  color: #414141;
  margin-bottom: 0px; }

h2 {
  position: relative;
  font-weight: 700;
  font-size: 32px;
  color: #414141;
  margin-bottom: 50px;
  text-align: center; }
  h2:before {
    content: '';
    position: absolute;
    width: 10%;
    height: 2px;
    background-color: #919191;
    left: 50%;
    top: 130%;
    -ms-transform: translateX(-50%);
        transform: translateX(-50%); }
  h2:after {
    content: '';
    position: absolute;
    width: 5%;
    height: 2px;
    background-color: #919191;
    left: 50%;
    top: 110%;
    -ms-transform: translateX(-50%);
        transform: translateX(-50%); }

h3 {
  font-weight: 700;
  font-size: 32px;
  color: #919191;
  margin-bottom: 50px; }

h5 {
  font-size: 16px;
  font-weight: 600;
  letter-spacing: 1px;
  color: #919191; }

.btn-primary {
  display: inline-block;
  padding: 15px 50px;
  transition: all 0.3s ease-in-out;
  border: none;
  cursor: pointer;
  border-radius: 10px;
  font-size: 16px;
  text-transform: uppercase;
  font-weight: 700;
  letter-spacing: 2px;
  text-align: center;
  outline: none; }

.btn-primary {
  background-color: #393939; }
  .btn-primary a {
    color: #fff; }
  .btn-primary:hover {
    background-color: #000; }

.animated {
  animation-duration: 2s;
  animation-fill-mode: both;
  animation-iteration-count: infinite;
  animation-name: bounce;
  -ms-transform-origin: center bottom;
      transform-origin: center bottom; }

@keyframes bounce {
  from,
  20%,
  53%,
  80%,
  to {
    animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
    transform: translate3d(0, 0, 0); }
  40%,
  43% {
    animation-timing-function: cubic-bezier(0.755, 0.05, 0.855, 0.06);
    transform: translate3d(0, 0px, 0); }
  70% {
    animation-timing-function: cubic-bezier(0.755, 0.05, 0.855, 0.06);
    transform: translate3d(0, -4px, 0); }
  90% {
    transform: translate3d(0, -4px, 0); } }

.dots {
  position: absolute;
  width: 100%;
  height: 100%;
  left: 0;
  top: 0;
  z-index: -1; }
  .dots > div {
    position: absolute;
    width: 20px;
    height: 20px;
    border-radius: 20px;
    animation-duration: 10s;
    animation-timing-function: linear;
    animation-iteration-count: infinite;
    background-color: #fff;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24); }
    @media (max-width: 768px) {
      .dots > div {
        animation-duration: 10s; } }
    @media (max-width: 480px) {
      .dots > div {
        animation-duration: 3s; } }
  .dots > div:nth-child(1) {
    animation-name: dot1;
    left: 101%;
    top: 50%; }
  .dots > div:nth-child(2) {
    animation-name: dot2;
    left: 60%;
    top: 50%; }
  .dots > div:nth-child(3) {
    animation-name: dot3;
    animation-delay: 3s;
    left: 101%;
    top: 50%; }
  .dots > div:nth-child(4) {
    animation-name: dot4;
    animation-delay: 4s;
    left: 101%;
    top: 80%; }
  .dots > div:nth-child(5) {
    animation-name: dot5;
    animation-delay: 7s;
    left: 101%;
    top: 10%; }
  .dots > div:nth-child(6) {
    animation-name: dot6;
    animation-delay: 11s;
    left: 101%;
    top: 90%; }
  .dots > div:nth-child(7) {
    animation-name: dot7;
    animation-delay: 14s;
    left: 101%;
    top: 50%; }
  .dots > div:nth-child(8) {
    animation-name: dot8;
    animation-delay: 16s;
    left: 101%;
    top: 60%; }
  .dots > div:nth-child(9) {
    animation-name: dot9;
    animation-delay: 17s;
    left: 101%;
    top: 30%; }

@keyframes dot1 {
  0% {
    transform: translate(0vw, 0px); }
  50% {
    transform: translate(-50vw, 50px); }
  100% {
    transform: translate(-120vw, -50px); } }

@keyframes dot2 {
  0% {
    transform: translate(0vw, 0px); }
  50% {
    transform: translate(-50vw, -80px); }
  100% {
    transform: translate(-120vw, 30px); } }

@keyframes dot3 {
  0% {
    transform: translate(0vw, 0px); }
  50% {
    transform: translate(-50vw, -130px); }
  100% {
    transform: translate(-120vw, 40px); } }

@keyframes dot4 {
  0% {
    transform: translate(0vw, 0px); }
  50% {
    transform: translate(-50vw, -80px); }
  100% {
    transform: translate(-120vw, 100px); } }

@keyframes dot5 {
  0% {
    transform: translate(0vw, 0px); }
  50% {
    transform: translate(-50vw, 80px); }
  100% {
    transform: translate(-120vw, -60px); } }

@keyframes dot6 {
  0% {
    transform: translate(0vw, 0px); }
  50% {
    transform: translate(-70vw, -50px); }
  100% {
    transform: translate(-120vw, 0px); } }

@keyframes dot7 {
  0% {
    transform: translate(0vw, 0px); }
  50% {
    transform: translate(-50vw, 70px); }
  100% {
    transform: translate(-120vw, -50px); } }

@keyframes dot8 {
  0% {
    transform: translate(0vw, 0px); }
  50% {
    transform: translate(-50vw, 60px); }
  100% {
    transform: translate(-120vw, -50px); } }

@keyframes dot9 {
  0% {
    transform: translate(0vw, 0px); }
  50% {
    transform: translate(-50vw, 100px); }
  100% {
    transform: translate(-120vw, -100px); } }

/**
 * Owl Carousel v2.3.4
 * Copyright 2013-2018 David Deutsch
 * Licensed under: SEE LICENSE IN https://github.com/OwlCarousel2/OwlCarousel2/blob/master/LICENSE
 */
.owl-carousel,
.owl-carousel .owl-item {
  -webkit-tap-highlight-color: transparent;
  position: relative; }

.owl-carousel {
  display: none;
  width: 100%;
  z-index: 1; }

.owl-carousel .owl-stage {
  position: relative;
  -ms-touch-action: pan-Y;
  touch-action: manipulation;
  -moz-backface-visibility: hidden; }

.owl-carousel .owl-stage:after {
  content: ".";
  display: block;
  clear: both;
  visibility: hidden;
  line-height: 0;
  height: 0; }

.owl-carousel .owl-stage-outer {
  position: relative;
  overflow: hidden;
  -webkit-transform: translate3d(0, 0, 0); }

.owl-carousel .owl-item,
.owl-carousel .owl-wrapper {
  -webkit-backface-visibility: hidden;
  -moz-backface-visibility: hidden;
  -ms-backface-visibility: hidden;
  -webkit-transform: translate3d(0, 0, 0);
  -moz-transform: translate3d(0, 0, 0);
  -ms-transform: translate3d(0, 0, 0); }

.owl-carousel .owl-item {
  min-height: 1px;
  float: left;
  -webkit-backface-visibility: hidden;
  -webkit-touch-callout: none; }

.owl-carousel .owl-item img {
  display: block;
  width: 100%; }

.owl-carousel .owl-dots.disabled,
.owl-carousel .owl-nav.disabled {
  display: none; }

.no-js .owl-carousel,
.owl-carousel.owl-loaded {
  display: block; }

.owl-carousel .owl-dot,
.owl-carousel .owl-nav .owl-next,
.owl-carousel .owl-nav .owl-prev {
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none; }

.owl-carousel .owl-nav button.owl-next,
.owl-carousel .owl-nav button.owl-prev,
.owl-carousel button.owl-dot {
  background: 0 0;
  color: inherit;
  border: none;
  padding: 0 !important;
  font: inherit; }

.owl-carousel.owl-loading {
  opacity: 0;
  display: block; }

.owl-carousel.owl-hidden {
  opacity: 0; }

.owl-carousel.owl-refresh .owl-item {
  visibility: hidden; }

.owl-carousel.owl-drag .owl-item {
  -ms-touch-action: pan-y;
  touch-action: pan-y;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none; }

.owl-carousel.owl-grab {
  cursor: move;
  cursor: grab; }

.owl-carousel.owl-rtl {
  direction: rtl; }

.owl-carousel.owl-rtl .owl-item {
  float: right; }

.owl-carousel .animated {
  animation-duration: 1s;
  animation-fill-mode: both; }

.owl-carousel .owl-animated-in {
  z-index: 0; }

.owl-carousel .owl-animated-out {
  z-index: 1; }

.owl-carousel .fadeOut {
  animation-name: fadeOut; }

@keyframes fadeOut {
  0% {
    opacity: 1; }
  100% {
    opacity: 0; } }

.owl-height {
  transition: height 0.5s ease-in-out; }

.owl-carousel .owl-item .owl-lazy {
  opacity: 0;
  transition: opacity 0.4s ease; }

.owl-carousel .owl-item .owl-lazy:not([src]),
.owl-carousel .owl-item .owl-lazy[src^=""] {
  max-height: 0; }

.owl-carousel .owl-item img.owl-lazy {
  transform-style: preserve-3d; }

.owl-carousel .owl-video-wrapper {
  position: relative;
  height: 100%;
  background: #000; }

.owl-carousel .owl-video-play-icon {
  position: absolute;
  height: 80px;
  width: 80px;
  left: 50%;
  top: 50%;
  margin-left: -40px;
  margin-top: -40px;
  background: url(owl.video.play.png) no-repeat;
  cursor: pointer;
  z-index: 1;
  -webkit-backface-visibility: hidden;
  transition: transform 0.1s ease; }

.owl-carousel .owl-video-play-icon:hover {
  -ms-transform: scale(1.3, 1.3);
  transform: scale(1.3, 1.3); }

.owl-carousel .owl-video-playing .owl-video-play-icon,
.owl-carousel .owl-video-playing .owl-video-tn {
  display: none; }

.owl-carousel .owl-video-tn {
  opacity: 0;
  height: 100%;
  background-position: center center;
  background-repeat: no-repeat;
  background-size: contain;
  transition: opacity 0.4s ease; }

.owl-carousel .owl-video-frame {
  position: relative;
  z-index: 1;
  height: 100%;
  width: 100%; }

.owl-dots {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: center;
      justify-content: center;
  margin-top: 43px; }
  .owl-dots button.owl-dot {
    width: 16px;
    height: 16px;
    background: #919191;
    margin-right: 9px;
    cursor: pointer;
    outline: none;
    border-radius: 50%;
    transition: all 0.3s ease-in-out; }
    .owl-dots button.owl-dot:hover, .owl-dots button.owl-dot.active {
      background: #414141; }

.header {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  transition: all 0.3s ease-in-out;
  z-index: 10; }
  .header.active {
    background-color: #fff;
    box-shadow: 0px 6px 7px 0px rgba(0, 0, 0, 0.2); }
  .header .container {
    overflow: visible; }
  .header__content {
    position: relative;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-pack: justify;
        justify-content: space-between;
    -ms-flex-align: center;
        align-items: center;
    padding: 15px 0; }
  .header__logo a {
    font-family: 'Montserrat', sans-serif;
    font-weight: 900;
    font-size: 35px;
    letter-spacing: 2.5px;
    color: #393939; }
  @media (max-width: 1280px) {
    .header__nav {
      position: absolute;
      width: 100%;
      left: 0;
      top: 60px;
      display: -ms-flexbox;
      display: flex;
      -ms-flex-pack: center;
          justify-content: center;
      -ms-flex-align: center;
          align-items: center;
      -ms-flex-direction: column;
          flex-direction: column;
      background-color: #393939;
      pointer-events: none;
      opacity: 0;
      visibility: hidden;
      transition: all .6s ease-in-out;
      max-height: 0;
      overflow: hidden; } }
  @media (max-width: 1280px) {
    .header__nav.expand {
      pointer-events: all;
      opacity: 1;
      visibility: visible;
      max-height: 800px;
      margin-top: 13px; } }
  .header__nav__item {
    font-size: 14px;
    font-weight: 400;
    color: #6a6a6a;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    position: relative; }
    @media (max-width: 1280px) {
      .header__nav__item {
        color: #fff; } }
    @media (max-width: 1280px) {
      .header__nav__item:first-child {
        margin-top: 35px; } }
    @media (max-width: 1280px) {
      .header__nav__item:last-child {
        margin-bottom: 35px; } }
    .header__nav__item + .header__nav__item {
      margin-left: 20px; }
      @media (max-width: 1280px) {
        .header__nav__item + .header__nav__item {
          margin-left: 0;
          margin-top: 20px; } }
    .header__nav__item:after {
      content: '';
      position: absolute;
      width: 100%;
      height: 2px;
      background-color: #393939;
      left: 0;
      bottom: -10px;
      opacity: 0;
      transition: all 0.3s ease-in-out; }
      @media (max-width: 1280px) {
        .header__nav__item:after {
          background-color: #fff; } }
    .header__nav__item.active:after {
      bottom: -5px;
      opacity: 1; }
  .header__hamburger {
    display: none;
    background: none;
    border: none;
    padding: 0;
    outline: none;
    position: relative;
    width: 31px;
    height: 35px;
    z-index: 10;
    font-size: 35px;
    color: #393939; }
    @media (max-width: 1280px) {
      .header__hamburger {
        display: block; } }
    .header__hamburger i {
      position: absolute;
      top: 50%;
      left: 50%;
      -ms-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%); }
      .header__hamburger i.fas.fa-times {
        visibility: hidden; }
    .header__hamburger.active i.fas.fa-times {
      visibility: visible; }
    .header__hamburger.active i.fas.fa-bars {
      visibility: hidden; }

.banner {
  min-height: 100vh;
  padding-top: 100px;
  padding-bottom: 0; }
  .banner__content {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-pack: justify;
        justify-content: space-between;
    -ms-flex-align: center;
        align-items: center;
    min-height: calc(100vh - 100px); }
    @media (max-width: 768px) {
      .banner__content {
        -ms-flex-direction: column;
            flex-direction: column; } }
  @media (max-width: 956px) {
    .banner__text {
      max-width: 245px; } }
  @media (max-width: 768px) {
    .banner__text {
      max-width: 100%;
      text-align: center; } }
  .banner__image {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-align: end;
        align-items: flex-end;
    -ms-flex-item-align: end;
        align-self: flex-end; }
    .banner__image .person {
      position: relative;
      top: 0;
      right: 0;
      margin-bottom: -30px;
      transition: .1s linear; }
  @media (max-width: 956px) {
    .banner h1 {
      font-size: 35px;
      line-height: 40px; } }
  @media (max-width: 768px) {
    .banner h1 {
      font-size: 32px; } }
  @media (max-width: 480px) {
    .banner h1 {
      font-size: 28px; } }
  .banner P {
    margin-top: 30px;
    max-width: 500px; }
    @media (max-width: 956px) {
      .banner P {
        max-width: 100%; } }
    @media (max-width: 768px) {
      .banner P {
        margin-top: 15px; } }
  .banner a {
    color: #6a6a6a;
    font-weight: 700;
    transition: all 0.3s ease-in-out; }
    .banner a:hover {
      opacity: 0.8; }
    .banner a i {
      font-size: 15px;
      margin-left: 5px; }

.about {
  background-color: #fff; }
  .about .container {
    overflow: visible; }
  .about__content {
    text-align: center; }
    .about__content .btn-primary {
      margin-top: 30px; }
  .about__item {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-pack: justify;
        justify-content: space-between;
    -ms-flex-align: center;
        align-items: center; }
    @media (max-width: 956px) {
      .about__item {
        display: -ms-flexbox;
        display: flex;
        -ms-flex-pack: center;
            justify-content: center;
        -ms-flex-align: center;
            align-items: center;
        -ms-flex-direction: column;
            flex-direction: column; } }
    .about__item > div {
      -ms-flex: 1;
          flex: 1; }
    .about__item__text {
      text-align: center;
      margin-right: 30px; }
      @media (max-width: 956px) {
        .about__item__text {
          margin-right: 0; } }
    .about__item:nth-child(2n) .about__item__image {
      -ms-flex-order: -1;
          order: -1;
      -ms-transform: scale(0.8, 0.8) rotate(-5deg);
          transform: scale(0.8, 0.8) rotate(-5deg);
      transition: all 0.3s ease-in-out; }
      @media (max-width: 956px) {
        .about__item:nth-child(2n) .about__item__image {
          -ms-flex-order: 0;
              order: 0; } }
      .about__item:nth-child(2n) .about__item__image .polaroid:before {
        -ms-transform: rotate(-6deg);
            transform: rotate(-6deg);
        height: 20%;
        width: 47%;
        bottom: 30px;
        left: 12px;
        box-shadow: 0 33.6px 32px rgba(0, 0, 0, 0.4); }
    .about__item:nth-child(2n) .about__item__text {
      text-align: right; }
      @media (max-width: 956px) {
        .about__item:nth-child(2n) .about__item__text {
          text-align: center; } }
    .about__item__image {
      max-width: 35%;
      text-align: center;
      filter: grayscale(100%);
      -ms-transform: scale(0.8, 0.8) rotate(5deg);
          transform: scale(0.8, 0.8) rotate(5deg);
      transition: all 0.3s ease-in-out; }
      @media (max-width: 956px) {
        .about__item__image {
          max-width: 70%;
          margin: 10px 0; } }
      .about__item__image .polaroid {
        background: #fff;
        padding: 1rem;
        box-shadow: 0 3.2px 19.2px rgba(0, 0, 0, 0.2); }
        .about__item__image .polaroid img {
          width: 100%;
          height: auto; }
        .about__item__image .polaroid:before {
          content: '';
          position: absolute;
          z-index: -1;
          transition: all 0.3s ease-in-out; }
      .about__item__image .polaroid:before {
        -ms-transform: rotate(6deg);
            transform: rotate(6deg);
        height: 20%;
        width: 47%;
        bottom: 30px;
        right: 12px;
        box-shadow: 0 33.6px 32px rgba(0, 0, 0, 0.4); }
      .about__item__image:hover {
        filter: none;
        -ms-transform: scale(1, 1) rotate(0deg) !important;
            transform: scale(1, 1) rotate(0deg) !important;
        transition: all 0.3s ease-in-out; }
        .about__item__image:hover .polaroid:before {
          content: '';
          position: absolute;
          z-index: -1;
          -ms-transform: rotate(0deg);
              transform: rotate(0deg);
          height: 90%;
          width: 90%;
          bottom: 0;
          right: 5%;
          box-shadow: 0 16px 48px rgba(0, 0, 0, 0.2);
          transition: all 0.3s ease-in-out; }

.technologies {
  position: relative;
  overflow: hidden; }
  .technologies .container {
    overflow: visible; }
  .technologies__text {
    text-align: center;
    padding-top: 30px;
    letter-spacing: 1px; }
  .technologies__cards {
    text-align: center;
    padding-top: 40px; }
  .technologies__card {
    background-color: #fff;
    width: 200px;
    padding: 20px 10px 40px;
    margin: 10px auto;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);
    transition: all 0.3s ease-in-out; }
    @media (max-width: 956px) {
      .technologies__card {
        width: 175px; } }
    .technologies__card:hover span {
      box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22); }
    .technologies__card span {
      position: relative;
      display: inline-block;
      width: 100px;
      height: 100px;
      border-radius: 50%;
      background-color: #6a6a6a;
      color: #fff;
      margin-bottom: 20px;
      transition: all 0.3s ease-in-out; }
      .technologies__card span i {
        font-size: 55px;
        position: absolute;
        top: 50%;
        left: 50%;
        -ms-transform: translate(-50%, -50%);
            transform: translate(-50%, -50%); }
    .technologies__card h5 {
      position: relative; }
      .technologies__card h5:after {
        content: '';
        position: absolute;
        width: 10%;
        height: 2px;
        background-color: #919191;
        left: 50%;
        top: 130%;
        -ms-transform: translateX(-50%);
            transform: translateX(-50%); }

.portfolio {
  background-color: #fff; }
  .portfolio .container {
    overflow: visible; }
  .portfolio__heading {
    width: 100%; }
  .portfolio__text {
    text-align: center;
    padding-top: 30px;
    letter-spacing: 1px; }
  .portfolio__items {
    max-width: 100%;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-pack: start;
        justify-content: flex-start;
    -ms-flex-align: center;
        align-items: center;
    -ms-flex-wrap: wrap;
        flex-wrap: wrap; }
    @media (max-width: 956px) {
      .portfolio__items {
        -ms-flex-pack: center;
            justify-content: center;
        -ms-flex-direction: column;
            flex-direction: column; } }
  .portfolio__item {
    width: calc(100% / 3);
    transform-style: preserve-3d;
    perspective: 1000px;
    padding: 10px; }
    @media (max-width: 956px) {
      .portfolio__item {
        width: calc(100% / 2); } }
    @media (max-width: 768px) {
      .portfolio__item {
        width: 100%; } }
    .portfolio__item__front, .portfolio__item__back {
      box-sizing: border-box;
      background-size: cover;
      background-position: top;
      -webkit-backface-visibility: hidden;
              backface-visibility: hidden;
      text-align: center;
      min-height: 280px;
      height: 100%;
      transition: all 0.8s ease-in-out; }
    .portfolio__item__front {
      transform: rotateY(0deg);
      transform-style: preserve-3d; }
      .portfolio__item__front:after {
        position: absolute;
        top: 0;
        left: 0;
        z-index: 1;
        width: 100%;
        height: 100%;
        content: '';
        display: block;
        -webkit-backface-visibility: hidden;
                backface-visibility: hidden;
        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24); }
    .portfolio__item__back {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      background: linear-gradient(-45deg, #919191 0%, #f5f5f5 100%);
      transform: rotateY(180deg);
      transform-style: preserve-3d; }
      .portfolio__item__back.hide {
        opacity: 0; }
    .portfolio__item:hover {
      transition: all 0.8ms ease-in-out; }
      .portfolio__item:hover .portfolio__item__front {
        transform: rotateY(-180deg);
        transform-style: preserve-3d; }
      .portfolio__item:hover .portfolio__item__back {
        transform: rotateY(0deg);
        transform-style: preserve-3d; }
    .portfolio__item__inner {
      transform: translateY(-50%) translateZ(60px) scale(0.94);
      top: 50%;
      position: absolute;
      left: 0;
      width: 100%;
      padding: 32px;
      perspective: inherit;
      z-index: 2; }
      .portfolio__item__inner h5 {
        font-size: 22px;
        margin-bottom: 32px;
        position: relative;
        color: #414141; }
        .portfolio__item__inner h5:after {
          content: '';
          width: 64px;
          height: 2px;
          position: absolute;
          background: #fff;
          display: block;
          left: 0;
          right: 0;
          margin: 0 auto;
          bottom: -12px; }
      .portfolio__item__inner p {
        color: #414141; }
        @media (max-width: 480px) {
          .portfolio__item__inner p {
            font-size: 10px; } }
  .portfolio__filters ul {
    padding: 0; }
  .portfolio__filters li {
    list-style: none;
    display: inline-block;
    padding: 20px;
    cursor: pointer;
    position: relative; }
    .portfolio__filters li:after {
      content: '';
      display: block;
      width: calc(0% - 60px);
      position: absolute;
      height: 2px;
      background: #6a6a6a;
      transition: width all 0.3s ease-in-out; }
    .portfolio__filters li:hover:after {
      width: calc(100% - 40px);
      transition: all 0.3s ease-in-out; }
    .portfolio__filters li.active:after {
      width: calc(100% - 40px);
      transition: width all 0.3s ease-in-out; }
  .portfolio__filters__category {
    text-align: center; }

.contact {
  transform-style: preserve-3d;
  perspective: 1000px;
  background-image: url("./../img/bg-contact.png");
  background-attachment: fixed;
  background-position: top;
  background-size: cover;
  background-repeat: no-repeat; }
  @media (max-width: 768px) {
    .contact {
      background-attachment: unset; } }
  .contact .container {
    overflow: visible; }
  .contact__card {
    position: relative;
    width: 100%;
    max-width: 700px;
    min-height: 400px;
    margin: 100px auto 0;
    border-radius: 7px;
    background: #f5f5f5;
    box-shadow: 0 0 20px rgba(0, 0, 0, 0.2);
    overflow: hidden;
    transition: all ease .5s; }
    @media (max-width: 768px) {
      .contact__card {
        -ms-transform: none !important;
            transform: none !important;
        min-height: 400px; } }

@-moz-document url-prefix() {
  .contact__card {
    transform: none !important; } }
    .contact__card:hover {
      box-shadow: 0 20px 40px rgba(0, 0, 0, 0.15);
      transition: all ease .1s; }
  .contact .card__content {
    position: absolute;
    width: 80%;
    top: 50%;
    left: 50%;
    transform: translate3d(-50%, -50%, 0);
    color: #414141; }
    @media (max-width: 768px) {
      .contact .card__content {
        width: 90%;
        -ms-transform: translate(-50%, -50%);
            transform: translate(-50%, -50%); } }
    @media (max-width: 480px) {
      .contact .card__content {
        text-align: center; } }
    .contact .card__content h3 {
      text-align: center; }
      @media (max-width: 768px) {
        .contact .card__content h3 {
          font-size: 29px;
          margin-bottom: 30px; } }
      @media (max-width: 480px) {
        .contact .card__content h3 {
          font-size: 22px;
          margin-bottom: 20px; } }
    .contact .card__content ul {
      list-style-type: none;
      margin: 0;
      padding: 0; }
    .contact .card__content li {
      padding-bottom: 10px; }
      @media (max-width: 480px) {
        .contact .card__content li {
          padding-bottom: 20px; }
          .contact .card__content li:last-child {
            padding-bottom: 0; } }
    .contact .card__content i {
      border: 1px solid #393939;
      border-radius: 50%;
      font-size: 24px;
      height: 47px;
      line-height: 47px;
      margin-right: 12px;
      text-align: center;
      width: 47px;
      color: #6a6a6a; }
      @media (max-width: 480px) {
        .contact .card__content i {
          margin-right: 0;
          margin-bottom: 8px; } }
    .contact .card__content a {
      color: #919191;
      transition: all 0.3s ease-in-out; }
      @media (max-width: 480px) {
        .contact .card__content a {
          display: block; } }
      .contact .card__content a:hover {
        color: #414141; }
    .contact .card__content span {
      display: inline-block; }
      @media (max-width: 480px) {
        .contact .card__content span {
          display: block; } }

.footer {
  margin: 50px 0; }
  .footer__content {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-pack: justify;
        justify-content: space-between;
    -ms-flex-align: center;
        align-items: center; }
    @media (max-width: 768px) {
      .footer__content {
        -ms-flex-direction: column;
            flex-direction: column;
        -ms-flex-pack: center;
            justify-content: center; } }
  @media (max-width: 768px) {
    .footer__text {
      margin-bottom: 20px; } }
  @media (max-width: 480px) {
    .footer__social {
      font-size: 5px; } }
  .footer a {
    font-size: 14px;
    font-weight: 400;
    color: #919191;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    transition: all 0.3s ease-in-out; }
    .footer a + a {
      margin-left: 15px; }
    .footer a i {
      font-size: 16px;
      margin-right: 5px; }
    .footer a:hover {
      color: #414141; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
